"""A game about LGBTQ+ history. :)"""
#python -m hack.hackathon


from turtle import Turtle, bgcolor, update, done, onkey, listen, tracer, clearscreen, resetscreen
from typing import Dict, List
import random


t1: Turtle = Turtle()
t2: Turtle = Turtle()
t3: Turtle = Turtle()
t4: Turtle = Turtle()
t5: Turtle = Turtle()
t6: Turtle = Turtle()
t7: Turtle = Turtle()
correct: Turtle = Turtle()
incorrect: Turtle = Turtle()
n_duck: Turtle = Turtle()
tear: Turtle = Turtle()
start: Turtle = Turtle()
sbox: Turtle = Turtle()
bi: Turtle = Turtle()
nb: Turtle = Turtle()
trans: Turtle = Turtle()

def main() -> None:
    """This bad boy can fit a whole lot of code B) (entrypoint to program)"""
    score = 0
    tracer(0,0)
    bgcolor("mistyrose")
    q_function_list = [q1, q2, q3, q4, q5, q6, q7]
    #put all question functions in this list so that I can randomly access them
    answer_key = {
        1 : "a",
        2 : "b",
        3 : "b",
        4 : "a",
        5 : "c",
        6 : "c"
    }
    q_num = 1
    _continue = False
    for q in q_function_list:
        q()
        answer = input("What is the answer to the question on screen? ")
        if answer == answer_key[q_num]:
            print('Correct!')
            select_answer()
            score += 1
            q_num += 1
        else:
            print('Incorrect')
            select_incorrect()
            q_num += 1
        while _continue == False:
            desire = input("Do you want to continue? ")
            if desire == 'yes' or desire == 'Yes':
                _continue = True
            else:
                _continue = False
        _continue = False
        clearscreen()
        resetscreen()
    done()

def select_answer() -> None:
    correct.hideturtle()
    correct.write("That's correct!")

def select_incorrect() -> None:
    incorrect.hideturtle()
    incorrect.write("Sorry, that's not correct.")
    sad_duck(-200, 0)


def q1() -> None:
    """What flag -> trans."""
    t1.hideturtle()
    t1.penup()
    t1.setposition(-235, 180)
    t1.pencolor("lightcoral")
    t1.pendown()
    t1.write("What community does this flag represent?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.right(90)
    t1.forward(400)
    t1.pendown()
    t1.write("a - Trans", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.left(90)
    t1.forward(175)
    t1.pendown()
    t1.write("b - Bisexual", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.forward(175)
    t1.pendown()
    t1.write("c - Pansexual", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.speed(0)
    trans_flag()
    onkey(select_answer, "a")
    onkey(select_incorrect, "b")
    onkey(select_incorrect, "c")
    listen()

    
def q2() -> None:
    """What flag -> nonbinary."""
    bgcolor("mistyrose")
    t2.hideturtle()
    t2.penup()
    t2.setposition(-235, 180)
    t2.pendown()
    t2.pencolor("lightcoral")
    t2.write("What community does this flag represent?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.right(90)
    t2.forward(400)
    t2.pendown()
    t2.write("a - Trans", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.left(90)
    t2.forward(160)
    t2.pendown()
    t2.write("b - Nonbinary", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.forward(175)
    t2.pendown()
    t2.write("c - Intersex", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.speed(0)
    nb_flag()
    onkey(select_answer, "a")
    onkey(select_incorrect, "b")
    onkey(select_incorrect, "c")
    listen()

def q3() -> None:
    """What percentage -> disability."""
    t3.hideturtle()
    t3.penup()
    t3.setposition(-235, 180)
    t3.pendown()
    t3.pencolor("lightcoral")
    t3.write("What percentage of LGBTQ+ people identify as having at least one disability?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t3.penup()
    t3.left(90)
    t3.forward(400)
    t3.pendown()
    t3.write("a - ~20%", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t3.penup()
    t3.left(90)
    t3.forward(160)
    t3.pendown()
    t3.write("b - ~33%", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t3.penup()
    t3.forward(175)
    t3.pendown()
    t3.write("c - ~44", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t3.speed(0)
    onkey(select_incorrect, "a")
    onkey(select_answer, "b")
    onkey(select_incorrect, "c")
    listen()    

def q4() -> None:
    """What does indigo -> flag."""
    t4.hideturtle()
    t4.penup()
    t4.setposition(-235, 180)
    t4.pendown()
    t4.pencolor("lightcoral")
    t4.write("What does indigo represent on the traditional pride flag?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t4.penup()
    t4.left(90)
    t4.forward(400)
    t4.pendown()
    t4.write("a - Serenity", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t4.penup()
    t4.left(90)
    t4.forward(160)
    t4.pendown()
    t4.write("b - Spirit", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t4.penup()
    t4.forward(175)
    t4.pendown()
    t4.write("c - Healing", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t4.speed(0)
    onkey(select_answer, "a - (The colors of the original pride flag were hot pink, red, orange, yellow, green, turquoise, indigo, and violet which stand for sex, life, healing, sunlight, nature, magic/art, serenity, and spirit respectively.)")
    onkey(select_incorrect, "b")
    onkey(select_incorrect, "c")
    listen()

def q5() -> None:
    """Who coined -> intersectionality."""
    t5.hideturtle()
    t5.penup()
    t5.setposition(-235, 180)
    t5.pendown()
    t5.pencolor("lightcoral")
    t5.write("Who is the visionary who coined the notion of Intersectionality?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.left(90)
    t5.forward(400)
    t5.pendown()
    t5.write("a - Harry Styles", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.left(90)
    t5.forward(160)
    t5.pendown()
    t5.write("b - Marsha P. Johnson", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.forward(175)
    t5.pendown()
    t5.write("c - Kimberle Williams Crenshaw", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t5.speed(0)
    onkey(select_incorrect, "a")
    onkey(select_incorrect, "b")
    onkey(select_answer, "c")
    listen()

def q6() -> None:
    """What two African countries -> priests."""
    t6.hideturtle()
    t6.penup()
    t6.setposition(-235, 180)
    t6.pendown()
    t6.pencolor("lightcoral")
    t6.write("Which two of these African countries conduct spiritual ceremonies with Trans priests?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.left(90)
    t6.forward(400)
    t6.pendown()
    t6.write("a - Nigeria && Ghana", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.left(90)
    t6.forward(160)
    t6.pendown()
    t6.write("b - Tanzania && Ethiopia", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.forward(175)
    t6.pendown()
    t6.write("c - Democratic Republic of Congo && Uganda", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t6.speed(0)
    onkey(select_incorrect, "a")
    onkey(select_incorrect, "b")
    onkey(select_answer, "c")
    listen()

def q7() -> None:
    """What does purple -> nonbinary flag."""
    t7.hideturtle()
    t7.penup()
    t7.setposition(-235, 180)
    t7.pendown()
    t7.pencolor("lightcoral")
    t7.write("What does purple represent in the nonbinary flag?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.left(90)
    t7.forward(400)
    t7.pendown()
    t7.write("a - Gender Nuetrality", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.left(90)
    t7.forward(160)
    t7.pendown()
    t7.write("b - Blending of Genders", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.forward(175)
    t7.pendown()
    t7.write("c - Lack of Gender", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t7.speed(0)
    nb_flag()
    onkey(select_incorrect, "a")
    onkey(select_answer, "b - (Purple represents people who identify as a blend of male and female)")
    onkey(select_incorrect, "c")
    listen()

def q8() -> None:
    """Which tech groups -> elders."""
    t8.hideturtle()
    t8.penup()
    t8.setposition(-235, 180)
    t8.pendown()
    t8.pencolor("lightcoral")
    t8.write("Which one of these tech groups is working to help LGBTQ+ elders break into the tech industry? PS. All of these groups are awesome and may have some cool resources for you!", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.left(90)
    t8.forward(400)
    t7.pendown()
    t7.write("a - Gender Nuetrality", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.left(90)
    t7.forward(160)
    t7.pendown()
    t7.write("b - Blending of Genders", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.forward(175)
    t7.pendown()
    t7.write("c - Lack of Gender", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t7.speed(0)
    onkey(select_incorrect, "a")
    onkey(select_answer, "b - (Purple represents people who identify as a blend of male and female)")
    onkey(select_incorrect, "c")
    listen()

def neutral_duck_sprite(x: int, y: int) -> None:
    n_duck.hideturtle()
    n_duck.penup()
    n_duck.setposition(x, y)
    n_duck.pencolor("gold")
    n_duck.pendown()
    n_duck.fillcolor("gold")
    n_duck.begin_fill()
    n_duck.forward(24)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(24)
    n_duck.left(90)
    n_duck.forward(32)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(48)
    n_duck.right(90)
    n_duck.forward(32)
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.left(90)
    n_duck.forward(16)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.right(180)
    n_duck.forward(8)
    n_duck.pencolor("black")
    n_duck.fillcolor("black")
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.left(90)
    n_duck.forward(8)
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.pencolor("orange")
    n_duck.fillcolor("orange")
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(32)
    n_duck.right(90)
    n_duck.forward(8)
    n_duck.right(90)
    n_duck.forward(32)
    n_duck.end_fill()


def sad_duck(x: int, y: int) -> None:
    neutral_duck_sprite(x, y)
    tear.penup()
    tear.setposition(x, y)
    tear.right(90)
    tear.forward(16)
    tear.left(90)
    tear.forward(16)
    tear.right(90)
    tear.pencolor("skyblue")
    tear.fillcolor("skyblue")
    tear.begin_fill()
    tear.pendown()
    tear.forward(16)
    tear.right(90)
    tear.forward(8)
    tear.right(90)
    tear.forward(16)
    tear.end_fill()
    tear.penup()




def start_screen() -> None:
    start.hideturtle()
    sbox.hideturtle()
    sbox.penup()
    sbox.setposition(-350, 240)
    sbox.pencolor("salmon")
    sbox.fillcolor("lightsalmon")
    sbox.begin_fill()
    sbox.pendown()
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(100)
    sbox.right(90)
    sbox.forward(700)
    sbox.end_fill()
    sbox.penup()
    start.pencolor("maroon")
    start.setposition(-230, 160)
    start.write(".*⋅LGBTQ+ Trivia!⋅*.", move=False, align="left", font=("Goudy Old Style", 40, "bold"))
    start.setposition(0, 50)
    start.write("Instructions", move=False, align="center", font=("Century Gothic", 30, "bold"))
    start.setposition(0, 0)
    start.write("Answer questions in the terminal based on the Turtle window.", move=False, align="center", font=("Century Gothic", 20, "bold"))
    
    
def nb_flag() -> None:
    nb.hideturtle()
    nb.pencolor("yellow")
    nb.fillcolor("yellow")
    nb.begin_fill()
    nb.pendown()
    nb.forward(200)
    nb.right(90)
    nb.forward(40)
    nb.right(90)
    nb.forward(200)
    nb.right(90)
    nb.forward(40)
    nb.end_fill()
    nb.penup()
    nb.right(180)
    nb.forward(40)
    nb.pencolor("white")
    nb.fillcolor("white")
    nb.begin_fill()
    nb.pendown()
    nb.forward(40)
    nb.left(90)
    nb.forward(200)
    nb.left(90)
    nb.forward(40)
    nb.left(90)
    nb.forward(200)
    nb.end_fill()
    nb.penup()
    nb.left(90)
    nb.forward(40)
    nb.pencolor("mediumorchid")
    nb.fillcolor("mediumorchid")
    nb.begin_fill()
    nb.pendown()
    nb.forward(40)
    nb.left(90)
    nb.forward(200)
    nb.left(90)
    nb.forward(40)
    nb.left(90)
    nb.forward(200)
    nb.end_fill()
    nb.penup()
    nb.left(90)
    nb.forward(40)
    nb.pencolor("black")
    nb.fillcolor("black")
    nb.begin_fill()
    nb.pendown()
    nb.forward(40)
    nb.left(90)
    nb.forward(200)
    nb.left(90)
    nb.forward(40)
    nb.left(90)
    nb.forward(200)
    nb.end_fill()
    nb.penup()

def bi_flag() -> None:
    bi.hideturtle()
    bi.pencolor("deeppink")
    bi.fillcolor("deeppink")
    bi.begin_fill()
    bi.pendown()
    bi.forward(200)
    bi.right(90)
    bi.forward(50)
    bi.right(90)
    bi.forward(200)
    bi.right(90)
    bi.forward(50)
    bi.end_fill()
    bi.penup()
    bi.right(180)
    bi.forward(50)
    bi.pencolor("mediumorchid")
    bi.fillcolor("mediumorchid")
    bi.begin_fill()
    bi.pendown()
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.left(90)
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.end_fill()
    bi.penup()
    bi.left(90)
    bi.forward(50)
    bi.pencolor("mediumblue")
    bi.fillcolor("mediumblue")
    bi.begin_fill()
    bi.pendown()
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.left(90)
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.end_fill()
    bi.penup()

def trans_flag() -> None:
    trans.setposition(-160,100)
    trans.hideturtle()
    trans.pencolor("deepskyblue")
    trans.fillcolor("deepskyblue")
    trans.begin_fill()
    trans.pendown()
    trans.forward(400)
    trans.right(90)
    trans.forward(50)
    trans.right(90)
    trans.forward(400)
    trans.right(90)
    trans.forward(50)
    trans.end_fill()
    trans.penup()
    trans.right(180)
    trans.forward(50)
    trans.pencolor("hotpink")
    trans.fillcolor("hotpink")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("white")
    trans.fillcolor("white")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("hotpink")
    trans.fillcolor("hotpink")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("deepskyblue")
    trans.fillcolor("deepskyblue")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)

if __name__ == "__main__":
    main()