"""A game about LGBTQ+ history. :)"""
#python -m hack.hackathon


from turtle import Turtle, bgcolor, update, done, onkey, listen, tracer, clearscreen, resetscreen, shape, showturtle, addshape, Screen
from typing import Dict, List
import random
import turtle
import os
print(os.getcwd())

t1: Turtle = Turtle()
t2: Turtle = Turtle()
t3: Turtle = Turtle()
t4: Turtle = Turtle()
t5: Turtle = Turtle()
t6: Turtle = Turtle()
t7: Turtle = Turtle()
t8: Turtle = Turtle()
t9: Turtle = Turtle()
t10: Turtle = Turtle()
t11: Turtle = Turtle()
t12: Turtle = Turtle()
t13: Turtle = Turtle()
t14: Turtle = Turtle()
t15: Turtle = Turtle()
t16: Turtle = Turtle()
t17: Turtle = Turtle()
t18: Turtle = Turtle()
t19: Turtle = Turtle()
t20: Turtle = Turtle()
correct: Turtle = Turtle()
incorrect: Turtle = Turtle()
n_duck: Turtle = Turtle()
tear: Turtle = Turtle()
heart: Turtle = Turtle()
start: Turtle = Turtle()
sbox: Turtle = Turtle()
bi: Turtle = Turtle()
nb: Turtle = Turtle()
trans: Turtle = Turtle()
test: Turtle = Turtle()

def main() -> None:
    """This bad boy can fit a whole lot of code B) (entrypoint to program)"""
    score = 0
    tracer(0,0)
    bgcolor("mistyrose")
    #'''
    start_screen()
    q_function_list = [q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14]
    #put all question functions in this list so that I can randomly access them
    answer_key = {
        1 : "a",
        2 : "b",
        3 : "b",
        4 : "a",
        5 : "c",
        6 : "c",
        7 : "b",
        8 : "b",
        9 : "a",
        10 : "a",
        11 : "c",
        12 : "a", 
        13 : "b",
        14 : "c",
        15 : "a",
        16 : "b",
        17 : "a",
        18 : "b",
        19 : "b",
        20 : "c",

        
    }
    q_num = 1
    _continue = False
    while _continue == False:
        desire = input("Are you ready to start? ")
        if desire == 'yes' or desire == "Yes":
            _continue = True
    _continue = False
    clearscreen()
    resetscreen()
    for q in q_function_list:
        q()
        bgcolor("mistyrose")
        answer = input("What is the answer to the question on screen? ")
        if answer == answer_key[q_num]:
            print('Correct!')
            select_answer()
            score += 1
            q_num += 1
        else:
            print('Incorrect')
            select_incorrect()
            q_num += 1
        while _continue == False:
            desire = input("Do you want to continue? ")
            if desire == 'yes' or desire == 'Yes':
                _continue = True
            else:
                _continue = False
        _continue = False
        clearscreen()
        resetscreen()
        print("Your score is:", score)
        #'''
    done()


def select_answer() -> None:
    tracer(0, 0)
    heart_duck(-100,100,3)
    correct.hideturtle()
    correct.penup()
    correct.setposition(0,-60)
    correct.pencolor("darkgoldenrod")
    correct.pendown()
    correct.write("Correct!", move=False, align="center", font=("Century Gothic", 22, "bold"))


def select_incorrect() -> None:
    tracer(0, 0)
    sad_duck(-100, 100, 3)
    incorrect.hideturtle()
    incorrect.penup()
    incorrect.setposition(0,-60)
    incorrect.pencolor("darkgoldenrod")
    incorrect.pendown()
    incorrect.write("Not quite!", move=False, align="center", font=("Century Gothic", 22, "bold")) 


def q1() -> None:
    """What flag -> trans."""
    tracer(0, 0)
    t1.hideturtle()
    t1.penup()
    t1.setposition(-235, 180)
    t1.pencolor("lightcoral")
    t1.pendown()
    t1.write("What community does this flag represent?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.right(90)
    t1.forward(400)
    t1.pendown()
    t1.write("a - Trans", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.left(90)
    t1.forward(175)
    t1.pendown()
    t1.write("b - Bisexual", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.forward(175)
    t1.pendown()
    t1.write("c - Pansexual", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.speed(0)
    trans_flag()

    
def q2() -> None:
    """What flag -> nonbinary."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t2.hideturtle()
    t2.penup()
    t2.setposition(-235, 180)
    t2.pendown()
    t2.pencolor("lightcoral")
    t2.write("What community does this flag represent?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.right(90)
    t2.forward(400)
    t2.pendown()
    t2.write("a - Trans", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.left(90)
    t2.forward(160)
    t2.pendown()
    t2.write("b - Nonbinary", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.forward(175)
    t2.pendown()
    t2.write("c - Intersex", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.speed(0)
    nb_flag(-200, 150)


def q3() -> None:
    """What percentage -> disability."""
    #tracer(0, 0)
    bgcolor("mistyrose")
    t3.hideturtle()
    t3.penup()
    t3.setposition(0, 180)
    t3.pendown()
    t3.pencolor("lightcoral")
    t3.write("What percentage of LGBTQ+ people", move=True, align="center", font=("Century Gothic", 17, "bold"))
    t3.penup()
    t3.setposition(0, 150)
    t3.pendown()
    t3.write("identify as having at least one disability?", move=True, align="center", font=("Century Gothic", 17, "bold"))
    t3.penup()
    t3.setposition(0, -200)
    t3.pendown()
    t3.write("a - ~20 percent    b - ~33 percent    c - ~44 percent", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t3.penup()
    turt = Turtle()
    turt.penup()
    turt.showturtle()
    turt.setposition(0,0)
    turt.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_3.gif")
    turt.shape("hack/Q_3.gif")
    turt.setposition(30, 0)
    turt.penup()
    t3.setposition(-250, 150)
    

def q4() -> None:
    """What does indigo -> flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t4.hideturtle()
    t4.penup()
    t4.setposition(0, 180)
    t4.pendown()
    t4.pencolor("lightcoral")
    t4.write("What does indigo represent on the traditional", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t4.penup()
    t4.setposition(0, 150)
    t4.pendown()
    t4.write("pride flag?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t4.penup()
    t4.setposition(0, -200)
    t4.pendown()
    t4.write("a - Serenity     b - Spirit     c - Healing", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t4.penup()

def q5() -> None:
    """Who coined -> intersectionality."""
    #tracer(0, 0)
    bgcolor("mistyrose")
    t5.hideturtle()
    t5.penup()
    t5.setposition(0, 180)
    t5.pendown()
    t5.pencolor("lightcoral")
    t5.write("Who is the visionary who coined the notion", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.setposition(0, 150)
    t5.pendown()
    t5.write("of Intersectionality?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.setposition(0, -170)
    t5.pendown()
    t5.write("a - Harry Styles    b - Marsha P. Johnson", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.setposition(0, -210)
    t5.pendown()
    t5.write("c - Kimberle Williams Crenshaw", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.showturtle()
    t5.setposition(0,0)
    t5.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q 5.gif")
    t5.shape("hack/Q 5.gif")
    t5.penup()
    t5.setposition(-250, 150)


def q6() -> None:
    """What two African countries -> priests."""
    #tracer(0, 0)
    bgcolor("mistyrose")
    t6.hideturtle()
    t6.penup()
    t6.setposition(0, 180)
    t6.pendown()
    t6.pencolor("lightcoral")
    t6.write("Which two of these African countries conduct", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.setposition(0, 150)
    t6.pendown()
    t6.write("spiritual ceremonies with Trans priests?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.setposition(0, -170)
    t6.pendown()
    t6.write("a - Nigeria & Ghana    b - Tanzania & Ethiopia", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.setposition(0, -210)
    t6.pendown()
    t6.write("c - Democratic Republic of Congo & Uganda", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.speed(0)
    listen()
    t6.penup()
    t6.showturtle()
    t6.setposition(0,0)
    t6.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q 6.gif")
    t6.shape("hack/Q 6.gif")
    t6.penup()
    t6.setposition(-250, 150)

def q7() -> None:
    """What does purple -> nonbinary flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t7.hideturtle()
    t7.penup()
    t7.setposition(0, 200)
    t7.pendown()
    t7.pencolor("lightcoral")
    t7.write("What does purple represent", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.setposition(0, 170)
    t7.pendown()
    t7.write("in the nonbinary flag?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.setposition(0, -170)
    t7.pendown()
    t7.write("a - Gender Neutrality    b - Blending of Genders", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.setposition(0, -210)
    t7.pendown()
    t7.write("c - Lack of Gender", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    nb_flag(200,-120)

def q8() -> None:
    """Which tech groups -> elders."""
    #tracer(0, 0)
    bgcolor("mistyrose")
    t8.hideturtle()
    t8.penup()
    t8.setposition(0, 200)
    t8.pendown()
    t8.pencolor("lightcoral")
    t8.write("Which one of these tech groups is working", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.setposition(0, 170)
    t8.pendown()
    t8.write(" to help LGBTQ+ elders break into the tech industry?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.setposition(0, 140)
    t8.pendown()
    t8.write("PS. All of these groups are awesome and may have", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.setposition(0, 110)
    t8.pendown()
    t8.write("some cool resources for you!", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t8.setposition(0, -200)
    t8.pendown()
    t8.write("a - Lesbians Who Tech    b - Sage    c - Out in Tech", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t.showturtle()
    t5.setposition(0,0)
    t5.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q 5.gif")
    t5.shape("hack/Q 5.gif")
    t5.penup()
    t5.setposition(-250, 150)
    

def q9() -> None:
    """What does magenta -> bi flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t9.hideturtle()
    t9.penup()
    t9.setposition(0, 180)
    t9.pendown()
    t9.pencolor("lightcoral")
    t9.write("What does the magenta stripe of the bi flag represent?", move=False, align="center", font=("Century Gothic", 16, "bold"))
    t9.penup()
    t9.setposition(0, -170)
    t9.pendown()
    t9.write("a - Same Gender Attraction", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t9.penup()
    t9.setposition(0, -210)
    t9.pendown()
    t9.write("b - Attraction Towards Other Genders   c - Both", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t9.penup()

def q10() -> None:
    """What cities -> LGBTQ+ friendly."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t10.hideturtle()
    t10.penup()
    t10.setposition(0, 200)
    t10.pendown()
    t10.pencolor("lightcoral")
    t10.write("Which one of these has a combination", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0, 170)
    t10.pendown()
    t10.write("of three of the top five most LGBTQ+", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0, 140)
    t10.pendown()
    t10.write("friendly cities in the World?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0, 110)
    t10.pendown()
    t10.write("(even though we’d like to visit them all!)", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0,-160)
    t10.pendown()
    t10.write("a - Tel Aviv, Israel; Berlin, Germany; New York City, United States", move=False, align="center", font=("Century Gothic", 12, "bold"))
    t10.penup()
    t10.setposition(0, -190)
    t10.pendown()
    t10.write("b - Amsterdam, Netherlands; Mexico City, Mexico; São Paulo, Brazil", move=False, align="center", font=("Century Gothic", 12, "bold"))
    t10.penup()
    t10.setposition(0, -220)
    t10.pendown()
    t10.write("c - Vancouver, BC, Canada; Durban, South Africa; London, United Kingdom", move=False, align="center", font=("Century Gothic", 12, "bold"))
    t10.penup()
    t10.showturtle()
    t10.shape("Q 10.gif")
    t10.setposition(-250, 150)


def q11() -> None:
    """What does stripe -> lesbian flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t11.hideturtle()
    t11.penup()
    t11.setposition(0, 180)
    t11.pendown()
    t11.pencolor("lightcoral")
    t11.write("What does the white stripe on the", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t11.penup()
    t11.setposition(0, 150)
    t11.write("lesbian pride flag represent?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t11.penup()
    t11.setposition(0, -170)
    t11.pendown()
    t11.write("a - Community    b - Nonbinary And Genderqueer Lesbians", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t11.penup()
    t11.setposition(0, -210)
    t11.pendown()
    t11.write("c - Connection To Womanhood", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t11.penup()
    
def q12() -> None:
    """Which celebrities -> identify queer."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t12.hideturtle()
    t12.penup()
    t12.setposition(0, 180)
    t12.pendown()
    t12.pencolor("lightcoral")
    t12.write("Which one of these celebrities", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t12.penup()
    t12.setposition(0, 150)
    t12.pendown()
    t12.write("does not identify as Queer?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t12.penup()
    t12.setposition(0, -200)
    t12.pendown()
    t12.write("a - Ariana Grande    b - Lily Tomlin    c - Willow Smith", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t12.penup()    

def q13() -> None:
    """How many countries -> same-sex marriage."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t13.hideturtle()
    t13.penup()
    t13.setposition(0, 180)
    t13.pendown()
    t13.pencolor("lightcoral")
    t13.write("How many countries, out of 195,", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t13.penup()
    t13.setposition(0, 150)
    t13.pendown()
    t13.write("have legalized same-sex marriage?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t13.penup()
    t13.setposition(0, -200)
    t13.pendown()
    t13.write("a - 76     b - 31     c - 52", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t13.penup()


def q14() -> None:
    """Which LGBTQ+ show -> remake."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t14.hideturtle()
    t14.penup()
    t14.setposition(0, 180)
    t14.pendown()
    t14.pencolor("lightcoral")
    t14.write("Which one of these LGBTQ+ TV shows is a remake?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()
    t14.setposition(0, 150)
    t14.pendown()
    t14.write("Hint: it may not be the one you think!", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()
    t14.setposition(0, -170)
    t14.pendown()
    t14.write("a - Ru Paul's Drag Race", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()
    t14.setposition(0, -210)
    t14.pendown()
    t14.write("b - Orange Is The New Black     c - Queer Eye", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()


def q15() -> None:
    """Which dating app -> for LGBTQ+."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t15.hideturtle()
    t15.penup()
    t15.setposition(0, 180)
    t15.pendown()
    t15.pencolor("lightcoral")
    t15.write("Which of these popular dating apps", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t15.penup()
    t15.setposition(0, 150)
    t15.pendown()
    t15.write("is not specifically for LGBTQ+ people?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t15.penup()
    t15.setposition(0, -200)
    t15.pendown()
    t15.write("a - OkCupid     b - HER     c - Grindr", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t15.penup()
        

def q16() -> None:
    """Who is author -> Marvel writer."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t16.hideturtle()
    t16.penup()
    t16.setposition(0, 180)
    t16.pendown()
    t16.pencolor("lightcoral")
    t16.write("Who is the author of ‘Nice Man’,", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.write("and the first Female Lead Marvel Writer?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.penup()
    t16.setposition(0, -170)
    t16.pendown()
    t16.write("a - Larissa Lai     b - Roxanne Gay", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.penup()
    t16.setposition(0, -210)
    t16.pendown()
    t16.write("c - Raquel Salas Rivera", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.penup()


def q17() -> None:
    """Who was first -> gay congress."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t17.hideturtle()
    t17.penup()
    t17.setposition(-235, 180)
    t17.pendown()
    t17.pencolor("lightcoral")
    t17.write("Who was the first openly Gay Man", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.write("to be elected to US Congress?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.penup()
    t17.setposition(0, -170)
    t17.pendown()
    t17.write("a - Ritchie Torres     b - Arnold Schwartzeneger", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.penup()
    t17.setposition(0, -210)
    t17.pendown()
    t17.write("c - Brendan Woodar", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.penup()
        

def q18() -> None:
    """Who is nonbinary -> Muslim politician."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t18.hideturtle()
    t18.penup()
    t18.setposition(-235, 180)
    t18.pendown()
    t18.pencolor("lightcoral")
    t18.write("Who was the non-binary and Muslim politician that emerged as being the first person in the US State House to hold both of these identities?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t18.penup()
    t18.left(90)
    t18.forward(400)
    t18.pendown()
    t18.write("a - Scott Tipton - Colorado", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t18.penup()
    t18.left(90)
    t18.forward(160)
    t18.pendown()
    t18.write("b - Mauree Turner - Oklahoma", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t18.penup()
    t18.forward(175)
    t18.pendown()
    t18.write("c - Lauren Underwood - Illinois", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t18.speed(0)
    listen()        
    
def q19() -> None:
    """What does yellow -> nonbinary flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t19.hideturtle()
    t19.penup()
    t19.setposition(-235, 180)
    t19.pendown()
    t19.pencolor("lightcoral")
    t19.write("What does yellow represent in the nonbinary flag?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t19.penup()
    t19.left(90)
    t19.forward(400)
    t19.pendown()
    t19.write("a - Gender Neutrality", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t19.penup()
    t19.left(90)
    t19.forward(160)
    t19.pendown()
    t19.write("b - Identifying outside the gender binary", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t19.penup()
    t19.forward(175)
    t19.pendown()
    t19.write("c - Lack of gender", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t19.speed(0)
    listen()

def q20() -> None:
    """What year Mexican activist -> GLF."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t20.hideturtle()
    t20.penup()
    t20.setposition(-235, 180)
    t20.pendown()
    t20.pencolor("lightcoral")
    t20.write("What year did Mexican LGBTQ+ activist, Nancy Cardenas, become the first person to openly declare homosexuality and start Mexico’s Gay Liberation Front (GLF)?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t20.penup()
    t20.left(90)
    t20.forward(400)
    t20.pendown()
    t20.write("a - 1992", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t20.penup()
    t20.left(90)
    t20.forward(160)
    t20.pendown()
    t20.write("b - 1989", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t20.penup()
    t20.forward(175)
    t20.pendown()
    t20.write("c - 1973", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t20.speed(0)
    listen()     


def neutral_duck_sprite(x: int, y: int, scalar: float) -> None:
    n_duck.hideturtle()
    n_duck.penup()
    n_duck.setposition(x, y)
    n_duck.pencolor("gold")
    n_duck.pendown()
    n_duck.fillcolor("gold")
    n_duck.begin_fill()
    n_duck.forward(24 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(24 * scalar)
    n_duck.left(90)
    n_duck.forward(32 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(48 * scalar)
    n_duck.right(90)
    n_duck.forward(32 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(16 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.right(180)
    n_duck.forward(8 * scalar)
    n_duck.pencolor("black")
    n_duck.fillcolor("black")
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.pencolor("orange")
    n_duck.fillcolor("orange")
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(32 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(32 * scalar)
    n_duck.end_fill()


def sad_duck(x: int, y: int, scalar: float) -> None:
    neutral_duck_sprite(x, y, scalar)
    tear.penup()
    tear.setposition(x + (8 * scalar), y - (32 * scalar))
    tear.left(90)
    tear.pencolor("skyblue")
    tear.fillcolor("skyblue")
    tear.begin_fill()
    tear.pendown()
    tear.forward(16 * scalar)
    tear.right(90)
    tear.forward(8 * scalar)
    tear.right(90)
    tear.forward(16 * scalar)
    tear.end_fill()
    tear.penup()
    tear.setposition(x + (8 * scalar), y - (32 * scalar))


def heart_duck(x: int, y: int, scalar: float) -> None:
    neutral_duck_sprite(x, y, scalar)
    scale = scalar / 2
    heart.hideturtle()
    heart.penup()
    heart.setposition(x, y)
    heart.pencolor("tomato")
    heart.fillcolor("tomato")
    heart.left(180)
    heart.forward(16 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.begin_fill()
    heart.pendown()
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.end_fill()
    heart.penup()



def start_screen() -> None:
    start.hideturtle()
    start.penup()
    sbox.hideturtle()
    sbox.penup()
    sbox.setposition(-350, 240)
    sbox.pencolor("salmon")
    sbox.fillcolor("lightsalmon")
    sbox.begin_fill()
    sbox.pendown()
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(100)
    sbox.right(90)
    sbox.forward(700)
    sbox.end_fill()
    sbox.penup()
    sbox.setposition(-350, 120)
    sbox.left(180)
    sbox.pencolor("thistle")
    sbox.fillcolor("thistle")
    sbox.begin_fill()
    sbox.pendown()
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(200)
    sbox.right(90)
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(200)
    sbox.end_fill()
    sbox.penup()
    sbox.setposition(-350, -120)
    sbox.right(90)
    sbox.pencolor("aquamarine")
    sbox.fillcolor("aquamarine")
    sbox.begin_fill()
    sbox.pendown()
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(100)
    sbox.right(90)
    sbox.forward(700)
    sbox.end_fill()
    sbox.penup()
    start.pencolor("maroon")
    start.setposition(-230, 160)
    start.pendown()
    start.write(".*⋅LGBTQ+ Trivia!⋅*.", move=False, align="left", font=("Goudy Old Style", 40, "bold"))
    start.penup()
    start.setposition(0, 50)
    start.pendown()
    start.write("Instructions", move=False, align="center", font=("Century Gothic", 30, "bold"))
    start.penup()
    start.setposition(0, 0)
    start.pendown()
    start.write("Answer questions in the terminal", move=False, align="center", font=("Century Gothic", 15, "bold"))
    start.penup()
    start.setposition(0, -30)
    start.pendown()
    start.write("based on the Turtle window!", move=False, align="center", font=("Century Gothic", 15, "bold"))
    start.penup()
    neutral_duck_sprite(-350,-140, 1)
    neutral_duck_sprite(-250,-140, 1)
    neutral_duck_sprite(-150,-140, 1)
    neutral_duck_sprite(-50,-140, 1)
    neutral_duck_sprite(50,-140, 1)
    neutral_duck_sprite(150,-140, 1)
    neutral_duck_sprite(250,-140, 1)
    
    
def nb_flag(x: int, y: int) -> None:
    nb.hideturtle()
    nb.setposition(x, y)
    nb.pencolor("yellow")
    nb.fillcolor("yellow")
    nb.begin_fill()
    nb.pendown()
    nb.forward(400)
    nb.right(90)
    nb.forward(70)
    nb.right(90)
    nb.forward(400)
    nb.right(90)
    nb.forward(70)
    nb.end_fill()
    nb.penup()
    nb.right(180)
    nb.forward(70)
    nb.pencolor("white")
    nb.fillcolor("white")
    nb.begin_fill()
    nb.pendown()
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.left(90)
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.end_fill()
    nb.penup()
    nb.left(90)
    nb.forward(70)
    nb.pencolor("mediumorchid")
    nb.fillcolor("mediumorchid")
    nb.begin_fill()
    nb.pendown()
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.left(90)
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.end_fill()
    nb.penup()
    nb.left(90)
    nb.forward(70)
    nb.pencolor("black")
    nb.fillcolor("black")
    nb.begin_fill()
    nb.pendown()
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.left(90)
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.end_fill()
    nb.penup()

def bi_flag() -> None:
    bi.hideturtle()
    bi.pencolor("deeppink")
    bi.fillcolor("deeppink")
    bi.begin_fill()
    bi.pendown()
    bi.forward(200)
    bi.right(90)
    bi.forward(50)
    bi.right(90)
    bi.forward(200)
    bi.right(90)
    bi.forward(50)
    bi.end_fill()
    bi.penup()
    bi.right(180)
    bi.forward(50)
    bi.pencolor("mediumorchid")
    bi.fillcolor("mediumorchid")
    bi.begin_fill()
    bi.pendown()
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.left(90)
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.end_fill()
    bi.penup()
    bi.left(90)
    bi.forward(50)
    bi.pencolor("mediumblue")
    bi.fillcolor("mediumblue")
    bi.begin_fill()
    bi.pendown()
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.left(90)
    bi.forward(50)
    bi.left(90)
    bi.forward(200)
    bi.end_fill()
    bi.penup()

def trans_flag() -> None:
    trans.setposition(-200,130)
    trans.hideturtle()
    trans.pencolor("deepskyblue")
    trans.fillcolor("deepskyblue")
    trans.begin_fill()
    trans.pendown()
    trans.forward(400)
    trans.right(90)
    trans.forward(50)
    trans.right(90)
    trans.forward(400)
    trans.right(90)
    trans.forward(50)
    trans.end_fill()
    trans.penup()
    trans.right(180)
    trans.forward(50)
    trans.pencolor("hotpink")
    trans.fillcolor("hotpink")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("white")
    trans.fillcolor("white")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("hotpink")
    trans.fillcolor("hotpink")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("deepskyblue")
    trans.fillcolor("deepskyblue")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()

if __name__ == "__main__":
    main()