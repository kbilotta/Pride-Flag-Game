"""A game about LGBTQ+ history. :)"""


__authors__ = "Kai, Dru, and Savannah"


from turtle import Turtle, bgcolor, update, done, onkey, listen, tracer, clearscreen, resetscreen, shape, showturtle, addshape, Screen
from typing import Dict, List
import random
import turtle
import os
print(os.getcwd())


t1: Turtle = Turtle()
t2: Turtle = Turtle()
t3: Turtle = Turtle()
t4: Turtle = Turtle()
t5: Turtle = Turtle()
t6: Turtle = Turtle()
t7: Turtle = Turtle()
t8: Turtle = Turtle()
t9: Turtle = Turtle()
t10: Turtle = Turtle()
t11: Turtle = Turtle()
t12: Turtle = Turtle()
t13: Turtle = Turtle()
t14: Turtle = Turtle()
t15: Turtle = Turtle()
t16: Turtle = Turtle()
t17: Turtle = Turtle()
t18: Turtle = Turtle()
t19: Turtle = Turtle()
t20: Turtle = Turtle()
correct: Turtle = Turtle()
incorrect: Turtle = Turtle()
n_duck: Turtle = Turtle()
tear: Turtle = Turtle()
heart: Turtle = Turtle()
start: Turtle = Turtle()
sbox: Turtle = Turtle()
bi: Turtle = Turtle()
nb: Turtle = Turtle()
trans: Turtle = Turtle()
lesbian: Turtle = Turtle()
rainbow: Turtle = Turtle()
test: Turtle = Turtle()
end: Turtle = Turtle()
ebox: Turtle = Turtle()


def main() -> None:
    """Entrypoint to game."""
    score: int = 0
    tracer(0,0)
    bgcolor("mistyrose")
    start_screen()
    q_function_list = [q1, q2, q3, q4, q5, q6, q7, q8, q9, q10, q11, q12, q13, q14, q15, q16, q17, q18, q19, q20]
    #put all question functions in this list so that I can randomly access them
    answer_key: Dict[int, str] = {
        1 : "a",
        2 : "b",
        3 : "b",
        4 : "a",
        5 : "c",
        6 : "c",
        7 : "b",
        8 : "b",
        9 : "a",
        10 : "a",
        11 : "c",
        12 : "a", 
        13 : "b",
        14 : "c",
        15 : "a",
        16 : "b",
        17 : "a",
        18 : "b",
        19 : "b",
        20 : "c",

        
    }

    explanation_key: Dict[int, str] = {
        1 : "This is the trans flag.",
        2 : "This is the nonbinary flag.",
        3 : "About 33 percent of LGBTQ+ people identify as having at least one disability",
        4 : "The colors of the original pride flag were hot pink, red, orange, yellow, green, turquoise, indigo, and violet which stand for sex, life, healing, sunlight, nature, magic/art, serenity, and spirit respectively.",
        5 : "Kimberle Williams Crenshaw: American lawyer, civil rights activist, and philosopher.",
        6 : "The answer is Republic of Congo and Uganda.",
        7 : "Purple represents people who identify as a blend of male and female.",
        8 : "Sage is an NYC-Based non-profit that's making waves!",
        9 : "The magenta stripe represents attraction toward people of the same gender while blue represents attraction toward other genders and purple represents both.",
        10 : "That would be Tel Aviv, Berlin, and NYC!",
        11 : "White represents connection to womanhood. The colors above it represent gender non-conformity, independence, and community while the colors below represent serenity and peace, love and sex, and femininity.",
        12 : "That's Ariana Grande!",
        13 : "(But it should definitely be all of them)",
        14 : "(We know youâ€™ve all seen it ;-) )",
        15 : "It's OkCupid of course!",
        16 : "Roxanne Gay, an American writer, professor, editor, and social commentator.",
        17 : "That's Ritchie Torres, representative of NYC!",
        18 : "Mauree Turner, representative of Oklahoma!",
        19 : "Yellow signifies something outside the binary, completely separate from cisgender norms.",
        20 : "1973"
    }

    q_num = 1
    _continue = False
    while _continue == False:
        desire = input("Are you ready to start? ")
        if desire.lower() == "yes":
            _continue = True
    _continue= False
    clearscreen()
    resetscreen()
    for q in q_function_list:
        q()
        bgcolor("mistyrose")
        answer = input("What is the answer to the question on screen? ")
        if answer.lower() == answer_key[q_num]:
            print('Correct!')
            select_answer()
            for item in explanation_key:
                if q_num == item:
                    print(explanation_key[item])
            score += 1
            q_num += 1
        else:
            print('Incorrect')
            select_incorrect()
            for item in explanation_key:
                if q_num == item:
                    print(explanation_key[item])
            q_num += 1
        while _continue == False:
            desire = input("Do you want to continue? ")
            if desire.lower() == "yes":
                _continue = True
            elif desire.lower() == "no":
                    clearscreen()
                    print(f"Your score is: {score}")
                    end_screen()
            else:
                _continue = False
        _continue = False
        clearscreen()
        resetscreen()
        print("Your score is:", score)
    end_screen()
    done()


def select_answer() -> None:
    tracer(0, 0)
    heart_duck(-100,100,3)
    correct.hideturtle()
    correct.penup()
    correct.setposition(0,-60)
    correct.pencolor("darkgoldenrod")
    correct.pendown()
    correct.write("Correct!", move=False, align="center", font=("Century Gothic", 22, "bold"))


def select_incorrect() -> None:
    tracer(0, 0)
    sad_duck(-100, 100, 3)
    incorrect.hideturtle()
    incorrect.penup()
    incorrect.setposition(0,-60)
    incorrect.pencolor("darkgoldenrod")
    incorrect.pendown()
    incorrect.write("Not quite!", move=False, align="center", font=("Century Gothic", 22, "bold")) 


def q1() -> None:
    """What flag -> trans."""
    tracer(0, 0)
    t1.hideturtle()
    t1.penup()
    t1.setposition(-235, 180)
    t1.pencolor("lightcoral")
    t1.pendown()
    t1.write("What community does this flag represent?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.right(90)
    t1.forward(400)
    t1.pendown()
    t1.write("a - Trans", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.left(90)
    t1.forward(175)
    t1.pendown()
    t1.write("b - Bisexual", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.penup()
    t1.forward(175)
    t1.pendown()
    t1.write("c - Pansexual", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t1.speed(0)
    trans_flag()
    t1.penup()
    t1.setposition(250, 250)

    
def q2() -> None:
    """What flag -> nonbinary."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t2.hideturtle()
    t2.penup()
    t2.setposition(-235, 180)
    t2.pendown()
    t2.pencolor("lightcoral")
    t2.write("What community does this flag represent?", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.right(90)
    t2.forward(400)
    t2.pendown()
    t2.write("a - Trans", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.left(90)
    t2.forward(160)
    t2.pendown()
    t2.write("b - Nonbinary", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.penup()
    t2.forward(175)
    t2.pendown()
    t2.write("c - Intersex", move=False, align="left", font=("Century Gothic", 17, "bold"))
    t2.speed(0)
    nb_flag(-200, 150)


def q3() -> None:
    """What percentage -> disability."""
    bgcolor("mistyrose")
    t3.hideturtle()
    t3.penup()
    t3.setposition(0, 180)
    t3.pendown()
    t3.pencolor("lightcoral")
    t3.write("What percentage of LGBTQ+ people", move=True, align="center", font=("Century Gothic", 17, "bold"))
    t3.penup()
    t3.setposition(0, 150)
    t3.pendown()
    t3.write("identify as having at least one disability?", move=True, align="center", font=("Century Gothic", 17, "bold"))
    t3.penup()
    t3.setposition(0, -200)
    t3.pendown()
    t3.write("a - ~20 percent    b - ~33 percent    c - ~44 percent", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t3.penup()
    turt = Turtle()
    turt.penup()
    turt.showturtle()
    turt.setposition(0,0)
    turt.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_3.gif")
    turt.shape("hack/Q_3.gif")
    turt.setposition(0, 0)
    turt.penup()
    

def q4() -> None:
    """What does indigo -> flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t4.hideturtle()
    t4.penup()
    t4.setposition(0, 180)
    t4.pendown()
    t4.pencolor("lightcoral")
    t4.write("What does indigo represent on the traditional", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t4.penup()
    t4.setposition(0, 150)
    t4.pendown()
    t4.write("pride flag?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t4.penup()
    t4.setposition(0, -200)
    t4.pendown()
    t4.write("a - Serenity     b - Spirit     c - Healing", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t4.penup()

def q5() -> None:
    """Who coined -> intersectionality."""
    bgcolor("mistyrose")
    t5.hideturtle()
    t5.penup()
    t5.setposition(0, 180)
    t5.pendown()
    t5.pencolor("lightcoral")
    t5.write("Who is the visionary who coined the notion", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.setposition(0, 150)
    t5.pendown()
    t5.write("of Intersectionality?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.setposition(0, -180)
    t5.pendown()
    t5.write("a - Harry Styles    b - Marsha P. Johnson", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.setposition(0, -220)
    t5.pendown()
    t5.write("c - Kimberle Williams Crenshaw", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t5.penup()
    t5.showturtle()
    t5.setposition(0,0)
    t5.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_5.gif")
    t5.shape("hack/Q_5.gif")
    t5.penup()


def q6() -> None:
    """What two African countries -> priests."""
    bgcolor("mistyrose")
    t6.hideturtle()
    t6.penup()
    t6.setposition(0, 210)
    t6.pendown()
    t6.pencolor("lightcoral")
    t6.write("Which two of these African countries conduct", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.setposition(0, 180)
    t6.pendown()
    t6.write("spiritual ceremonies with Trans priests?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.setposition(0, -210)
    t6.pendown()
    t6.write("a - Nigeria & Ghana    b - Tanzania & Ethiopia", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.penup()
    t6.setposition(0, -240)
    t6.pendown()
    t6.write("c - Democratic Republic of Congo & Uganda", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t6.speed(0)
    listen()
    t6.penup()
    t6.showturtle()
    t6.setposition(0,0)
    t6.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_6.gif")
    t6.shape("hack/Q_6.gif")
    t6.penup()


def q7() -> None:
    """What does purple -> nonbinary flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t7.hideturtle()
    t7.penup()
    t7.setposition(0, 200)
    t7.pendown()
    t7.pencolor("lightcoral")
    t7.write("What does purple represent", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.setposition(0, 170)
    t7.pendown()
    t7.write("in the nonbinary flag?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.setposition(0, -170)
    t7.pendown()
    t7.write("a - Gender Neutrality    b - Blending of Genders", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    t7.setposition(0, -210)
    t7.pendown()
    t7.write("c - Lack of Gender", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t7.penup()
    nb_flag(200,-120)

def q8() -> None:
    """Which tech groups -> elders."""
    bgcolor("mistyrose")
    t8.hideturtle()
    t8.penup()
    t8.setposition(0, 200)
    t8.pendown()
    t8.pencolor("lightcoral")
    t8.write("Which one of these tech groups is working", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.setposition(0, 170)
    t8.pendown()
    t8.write(" to help LGBTQ+ elders break into the tech industry?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.setposition(0, 140)
    t8.pendown()
    t8.write("PS. All of these groups are awesome and may have", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.setposition(0, 110)
    t8.pendown()
    t8.write("some cool resources for you!", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t8.setposition(0, -200)
    t8.pendown()
    t8.write("a - Lesbians Who Tech    b - Sage    c - Out in Tech", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t8.penup()
    t8.showturtle()
    t8.setposition(0,-15)
    t8.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_8.gif")
    t8.shape("hack/Q_8.gif")
    t8.penup()
    

def q9() -> None:
    """What does magenta -> bi flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t9.hideturtle()
    t9.penup()
    t9.setposition(0, 190)
    t9.pendown()
    t9.pencolor("lightcoral")
    t9.write("What does the magenta stripe of the bi flag represent?", move=False, align="center", font=("Century Gothic", 16, "bold"))
    t9.penup()
    t9.setposition(0, -170)
    t9.pendown()
    t9.write("a - Same Gender Attraction", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t9.penup()
    t9.setposition(0, -210)
    t9.pendown()
    t9.write("b - Attraction Towards Other Genders   c - Both", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t9.penup()
    bi_flag(-200, 170)

def q10() -> None:
    """What cities -> LGBTQ+ friendly."""
    bgcolor("mistyrose")
    t10.hideturtle()
    t10.penup()
    t10.setposition(0, 200)
    t10.pendown()
    t10.pencolor("lightcoral")
    t10.write("Which one of these has a combination", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0, 170)
    t10.pendown()
    t10.write("of three of the top five most LGBTQ+", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0, 140)
    t10.pendown()
    t10.write("friendly cities in the World?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0, 110)
    t10.pendown()
    t10.write("(even though weâ€™d like to visit them all!)", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t10.penup()
    t10.setposition(0,-160)
    t10.pendown()
    t10.write("a - Tel Aviv, Israel; Berlin, Germany; New York City, United States", move=False, align="center", font=("Century Gothic", 12, "bold"))
    t10.penup()
    t10.setposition(0, -190)
    t10.pendown()
    t10.write("b - Amsterdam, Netherlands; Mexico City, Mexico; SÃ£o Paulo, Brazil", move=False, align="center", font=("Century Gothic", 12, "bold"))
    t10.penup()
    t10.setposition(0, -220)
    t10.pendown()
    t10.write("c - Vancouver, BC, Canada; Durban, South Africa; London, United Kingdom", move=False, align="center", font=("Century Gothic", 12, "bold"))
    t10.penup()
    t10.showturtle()
    t10.setposition(0,-20)
    t10.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_10.gif")
    t10.shape("hack/Q_10.gif")
    t10.penup()


def q11() -> None:
    """What does stripe -> lesbian flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t11.hideturtle()
    t11.penup()
    t11.setposition(0, 180)
    t11.pendown()
    t11.pencolor("lightcoral")
    t11.write("What does the white stripe on the", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t11.penup()
    t11.setposition(0, 150)
    t11.write("lesbian pride flag represent?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t11.penup()
    t11.setposition(0, -170)
    t11.pendown()
    t11.write("a - Community    b - Nonbinary And Genderqueer Lesbians", move=False, align="center", font=("Century Gothic", 14, "bold"))
    t11.penup()
    t11.setposition(0, -210)
    t11.pendown()
    t11.write("c - Connection To Womanhood", move=False, align="center", font=("Century Gothic", 14, "bold"))
    t11.penup()
    

def q12() -> None:
    """Which celebrities -> identify queer."""
    bgcolor("mistyrose")
    t12.hideturtle()
    t12.penup()
    t12.setposition(0, 180)
    t12.pendown()
    t12.pencolor("lightcoral")
    t12.write("Which one of these celebrities", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t12.penup()
    t12.setposition(0, 150)
    t12.pendown()
    t12.write("does not identify as Queer?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t12.penup()
    t12.setposition(0, -200)
    t12.pendown()
    t12.write("a - Ariana Grande    b - Lily Tomlin    c - Willow Smith", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t12.penup()   
    t12.showturtle()
    t12.setposition(0,0)
    t12.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_12.gif")
    t12.shape("hack/Q_12.gif")
    t12.penup()


def q13() -> None:
    """How many countries -> same-sex marriage."""
    bgcolor("mistyrose")
    t13.hideturtle()
    t13.penup()
    t13.setposition(0, 180)
    t13.pendown()
    t13.pencolor("lightcoral")
    t13.write("How many countries, out of 195,", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t13.penup()
    t13.setposition(0, 150)
    t13.pendown()
    t13.write("have legalized same-sex marriage?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t13.penup()
    t13.setposition(0, -200)
    t13.pendown()
    t13.write("a - 76     b - 31     c - 52", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t13.penup()
    t13.showturtle()
    t13.setposition(0,0)
    t13.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_13.gif")
    t13.shape("hack/Q_13.gif")
    t13.penup()


def q14() -> None:
    """Which LGBTQ+ show -> remake."""
    bgcolor("mistyrose")
    t14.hideturtle()
    t14.penup()
    t14.setposition(0, 200)
    t14.pendown()
    t14.pencolor("lightcoral")
    t14.write("Which one of these LGBTQ+ TV shows is a remake?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()
    t14.setposition(0, 170)
    t14.pendown()
    t14.write("Hint: it may not be the one you think!", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()
    t14.setposition(0, -190)
    t14.pendown()
    t14.write("a - Ru Paul's Drag Race", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()
    t14.setposition(0, -220)
    t14.pendown()
    t14.write("b - Orange Is The New Black     c - Queer Eye", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t14.penup()
    t14.showturtle()
    t14.setposition(0,0)
    t14.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_14.gif")
    t14.shape("hack/Q_14.gif")
    t14.penup()


def q15() -> None:
    """Which dating app -> for LGBTQ+."""
    bgcolor("mistyrose")
    t15.hideturtle()
    t15.penup()
    t15.setposition(0, 180)
    t15.pendown()
    t15.pencolor("lightcoral")
    t15.write("Which of these popular dating apps", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t15.penup()
    t15.setposition(0, 150)
    t15.pendown()
    t15.write("is not specifically for LGBTQ+ people?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t15.penup()
    t15.setposition(0, -200)
    t15.pendown()
    t15.write("a - OkCupid     b - HER     c - Grindr", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t15.penup()
    t15.showturtle()
    t15.setposition(0,0)
    t15.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_15.gif")
    t15.shape("hack/Q_15.gif")
    t15.penup()
        

def q16() -> None:
    """Who is author -> Marvel writer."""
    bgcolor("mistyrose")
    t16.hideturtle()
    t16.penup()
    t16.setposition(0, 180)
    t16.pendown()
    t16.pencolor("lightcoral")
    t16.write("Who is the author of â€˜Nice Manâ€™,", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.penup()
    t16.setposition(0, 150)
    t16.pendown()
    t16.write("and the first Female Lead Marvel Writer?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.penup()
    t16.setposition(0, -170)
    t16.pendown()
    t16.write("a - Larissa Lai     b - Roxanne Gay", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.penup()
    t16.setposition(0, -210)
    t16.pendown()
    t16.write("c - Raquel Salas Rivera", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t16.penup()
    t16.showturtle()
    t16.setposition(0,0)
    t16.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_16.gif")
    t16.shape("hack/Q_16.gif")
    t16.penup()


def q17() -> None:
    """Who was first -> gay congress."""
    bgcolor("mistyrose")
    t17.hideturtle()
    t17.penup()
    t17.setposition(0, 180)
    t17.pendown()
    t17.pencolor("lightcoral")
    t17.write("Who was the first openly Gay Man", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.penup()
    t17.setposition(0, 150)
    t17.pendown()
    t17.write("to be elected to US Congress?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.penup()
    t17.setposition(0, -170)
    t17.pendown()
    t17.write("a - Ritchie Torres     b - Arnold Schwartzeneger", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.penup()
    t17.setposition(0, -210)
    t17.pendown()
    t17.write("c - Brendan Woodar", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t17.penup()
    t17.showturtle()
    t17.setposition(0,0)
    t17.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_17.gif")
    t17.shape("hack/Q_17.gif")
    t17.penup()
        

def q18() -> None:
    """Who is nonbinary -> Muslim politician."""
    bgcolor("mistyrose")
    t18.hideturtle()
    t18.penup()
    t18.setposition(0, 200)
    t18.pendown()
    t18.pencolor("lightcoral")
    t18.write("Who was the non-binary and Muslim politician", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t18.penup()
    t18.setposition(0, 170)
    t18.pendown()
    t18.write("that emerged as being the first person in", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t18.penup()
    t18.setposition(0, 140)
    t18.pendown()
    t18.write("the US State House to hold both of these identities?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t18.penup()
    t18.setposition(0, -190)
    t18.pendown()
    t18.write("a - Scott Tipton - Colorado    b - Mauree Turner - Oklahoma", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t18.penup()
    t18.setposition(0, -230)
    t18.pendown()
    t18.write("c - Lauren Underwood - Illinois", move=False, align="center", font=("Century Gothic", 15, "bold"))
    t18.penup()
    t18.showturtle()
    t18.setposition(0,-10)
    t18.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_18.gif")
    t18.shape("hack/Q_18.gif")
    t18.penup()
        
    
def q19() -> None:
    """What does yellow -> nonbinary flag."""
    tracer(0, 0)
    bgcolor("mistyrose")
    t19.hideturtle()
    t19.penup()
    t19.setposition(0, 180)
    t19.pendown()
    t19.pencolor("lightcoral")
    t19.write("What does yellow represent in the nonbinary flag?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t19.penup()
    t19.setposition(0, -170)
    t19.pendown()
    t19.write("a - Gender Neutrality    b - Identifying outside the gender binary", move=False, align="center", font=("Century Gothic", 14, "bold"))
    t19.penup()
    t19.setposition(0, -210)
    t19.pendown()
    t19.write("c - Lack of gender", move=False, align="center", font=("Century Gothic", 14, "bold"))
    t19.penup()
    nb_flag(-200,150)
    

def q20() -> None:
    """What year Mexican activist -> GLF."""
    bgcolor("mistyrose")
    t20.hideturtle()
    t20.penup()
    t20.setposition(0, 200)
    t20.pendown()
    t20.pencolor("lightcoral")
    t20.write("What year did Mexican LGBTQ+ activist,", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t20.penup()
    t20.setposition(0, 170)
    t20.pendown()
    t20.write("Nancy Cardenas, become the first person", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t20.penup()
    t20.setposition(0, 140)
    t20.pendown()
    t20.write("to openly declare homosexuality and start Mexicoâ€™s Gay Liberation Front (GLF)?", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t20.penup()
    t20.setposition(0, -200)
    t20.pendown()
    t20.write("a - 1992    b - 1989    c - 1973", move=False, align="center", font=("Century Gothic", 17, "bold"))
    t20.penup() 
    t20.showturtle()
    t20.setposition(0,-20)
    t20.pendown()
    screen = turtle.Screen()
    screen.addshape("hack/Q_20.gif")
    t20.shape("hack/Q_20.gif")
    t20.penup()   


def neutral_duck_sprite(x: int, y: int, scalar: float) -> None:
    n_duck.hideturtle()
    n_duck.penup()
    n_duck.setposition(x, y)
    n_duck.pencolor("gold")
    n_duck.pendown()
    n_duck.fillcolor("gold")
    n_duck.begin_fill()
    n_duck.forward(24 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(24 * scalar)
    n_duck.left(90)
    n_duck.forward(32 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(48 * scalar)
    n_duck.right(90)
    n_duck.forward(32 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(16 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.right(180)
    n_duck.forward(8 * scalar)
    n_duck.pencolor("black")
    n_duck.fillcolor("black")
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.left(90)
    n_duck.forward(8 * scalar)
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.end_fill()
    n_duck.penup()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.pencolor("orange")
    n_duck.fillcolor("orange")
    n_duck.begin_fill()
    n_duck.pendown()
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(32 * scalar)
    n_duck.right(90)
    n_duck.forward(8 * scalar)
    n_duck.right(90)
    n_duck.forward(32 * scalar)
    n_duck.end_fill()


def sad_duck(x: int, y: int, scalar: float) -> None:
    neutral_duck_sprite(x, y, scalar)
    tear.penup()
    tear.setposition(x + (8 * scalar), y - (32 * scalar))
    tear.left(90)
    tear.pencolor("skyblue")
    tear.fillcolor("skyblue")
    tear.begin_fill()
    tear.pendown()
    tear.forward(16 * scalar)
    tear.right(90)
    tear.forward(8 * scalar)
    tear.right(90)
    tear.forward(16 * scalar)
    tear.end_fill()
    tear.penup()
    #tear.setposition(x + (8 * scalar), y - (32 * scalar))
    tear.right(270)


def heart_duck(x: int, y: int, scalar: float) -> None:
    neutral_duck_sprite(x, y, scalar)
    scale = scalar / 2
    heart.hideturtle()
    heart.penup()
    heart.setposition(x, y)
    heart.pencolor("tomato")
    heart.fillcolor("tomato")
    heart.left(180)
    heart.forward(16 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.begin_fill()
    heart.pendown()
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.right(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.left(90)
    heart.forward(8 * scale)
    heart.end_fill()
    heart.penup()
    heart.right(180)



def start_screen() -> None:
    start.hideturtle()
    start.penup()
    sbox.hideturtle()
    sbox.penup()
    sbox.setposition(-350, 240)
    sbox.pencolor("salmon")
    sbox.fillcolor("lightsalmon")
    sbox.begin_fill()
    sbox.pendown()
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(100)
    sbox.right(90)
    sbox.forward(700)
    sbox.end_fill()
    sbox.penup()
    sbox.setposition(-350, 120)
    sbox.left(180)
    sbox.pencolor("thistle")
    sbox.fillcolor("thistle")
    sbox.begin_fill()
    sbox.pendown()
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(200)
    sbox.right(90)
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(200)
    sbox.end_fill()
    sbox.penup()
    sbox.setposition(-350, -120)
    sbox.right(90)
    sbox.pencolor("aquamarine")
    sbox.fillcolor("aquamarine")
    sbox.begin_fill()
    sbox.pendown()
    sbox.forward(700)
    sbox.right(90)
    sbox.forward(100)
    sbox.right(90)
    sbox.forward(700)
    sbox.end_fill()
    sbox.penup()
    start.pencolor("maroon")
    start.setposition(-230, 160)
    start.pendown()
    start.write(".*â‹…LGBTQ+ Trivia!â‹…*.", move=False, align="left", font=("Goudy Old Style", 40, "bold"))
    start.penup()
    start.setposition(0, 50)
    start.pendown()
    start.write("Instructions", move=False, align="center", font=("Century Gothic", 30, "bold"))
    start.penup()
    start.setposition(0, 0)
    start.pendown()
    start.write("Enter 'a,' 'b,' or 'c' to answer questions in the terminal", move=False, align="center", font=("Century Gothic", 15, "bold"))
    start.penup()
    start.setposition(0, -30)
    start.pendown()
    start.write("based on the Turtle window!", move=False, align="center", font=("Century Gothic", 15, "bold"))
    start.penup()
    neutral_duck_sprite(-350,-140, 1)
    neutral_duck_sprite(-250,-140, 1)
    neutral_duck_sprite(-150,-140, 1)
    neutral_duck_sprite(-50,-140, 1)
    neutral_duck_sprite(50,-140, 1)
    neutral_duck_sprite(150,-140, 1)
    neutral_duck_sprite(250,-140, 1)
    

def end_screen() -> None:
    tracer(0, 0)
    bgcolor("mistyrose")
    ebox.hideturtle()
    ebox.penup()
    ebox.setposition(-350, 240)
    ebox.pencolor("salmon")
    ebox.fillcolor("lightsalmon")
    ebox.begin_fill()
    ebox.pendown()
    ebox.forward(700)
    ebox.right(90)
    ebox.forward(100)
    ebox.right(90)
    ebox.forward(700)
    ebox.end_fill()
    ebox.penup()
    ebox.setposition(-350, 120)
    ebox.left(180)
    ebox.pencolor("thistle")
    ebox.fillcolor("thistle")
    ebox.begin_fill()
    ebox.pendown()
    ebox.forward(700)
    ebox.right(90)
    ebox.forward(200)
    ebox.right(90)
    ebox.forward(700)
    ebox.right(90)
    ebox.forward(200)
    ebox.end_fill()
    ebox.penup()
    ebox.setposition(-350, -120)
    ebox.right(90)
    ebox.pencolor("aquamarine")
    ebox.fillcolor("aquamarine")
    ebox.begin_fill()
    ebox.pendown()
    ebox.forward(700)
    ebox.right(90)
    ebox.forward(100)
    ebox.right(90)
    ebox.forward(700)
    ebox.end_fill()
    ebox.penup()
    end.hideturtle()
    end.penup()
    end.pencolor("maroon")
    end.setposition(-230, 160)
    end.pendown()
    end.write(".*â‹…LGBTQ+ Trivia!â‹…*.", move=False, align="left", font=("Goudy Old Style", 40, "bold"))
    end.penup()
    end.setposition(0, 50)
    end.pendown()
    end.write("Thanks for playing!", move=False, align="center", font=("Century Gothic", 30, "bold"))
    end.penup()
    end.setposition(0, 0)
    end.pendown()
    end.write("We hope you learned more about", move=False, align="center", font=("Century Gothic", 15, "bold"))
    end.penup()
    end.setposition(0, -30)
    end.pendown()
    end.write("LGBTQ+ history and trivia!", move=False, align="center", font=("Century Gothic", 15, "bold"))
    end.penup()
    neutral_duck_sprite(-350,-140, 1)
    neutral_duck_sprite(-250,-140, 1)
    neutral_duck_sprite(-150,-140, 1)
    neutral_duck_sprite(-50,-140, 1)
    neutral_duck_sprite(50,-140, 1)
    neutral_duck_sprite(150,-140, 1)
    neutral_duck_sprite(250,-140, 1)
    #this part is to keep it up and also quit the program
    game_end = input("Welcome to the end of the game! Enter 'q' to end the program ")
    if game_end.lower() == "q":
        quit()
    

    
def nb_flag(x: int, y: int) -> None:
    nb.hideturtle()
    nb.setposition(x, y)
    nb.pencolor("yellow")
    nb.fillcolor("yellow")
    nb.begin_fill()
    nb.pendown()
    nb.forward(400)
    nb.right(90)
    nb.forward(70)
    nb.right(90)
    nb.forward(400)
    nb.right(90)
    nb.forward(70)
    nb.end_fill()
    nb.penup()
    nb.right(180)
    nb.forward(70)
    nb.pencolor("white")
    nb.fillcolor("white")
    nb.begin_fill()
    nb.pendown()
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.left(90)
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.end_fill()
    nb.penup()
    nb.left(90)
    nb.forward(70)
    nb.pencolor("mediumorchid")
    nb.fillcolor("mediumorchid")
    nb.begin_fill()
    nb.pendown()
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.left(90)
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.end_fill()
    nb.penup()
    nb.left(90)
    nb.forward(70)
    nb.pencolor("black")
    nb.fillcolor("black")
    nb.begin_fill()
    nb.pendown()
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.left(90)
    nb.forward(70)
    nb.left(90)
    nb.forward(400)
    nb.end_fill()
    nb.penup()

def bi_flag(x: int, y: int) -> None:
    bi.penup()
    bi.setposition(x, y)
    bi.hideturtle()
    bi.pencolor("deeppink")
    bi.fillcolor("deeppink")
    bi.begin_fill()
    bi.pendown()
    bi.forward(400)
    bi.right(90)
    bi.forward(100)
    bi.right(90)
    bi.forward(400)
    bi.right(90)
    bi.forward(100)
    bi.end_fill()
    bi.penup()
    bi.right(180)
    bi.forward(100)
    bi.pencolor("mediumorchid")
    bi.fillcolor("mediumorchid")
    bi.begin_fill()
    bi.pendown()
    bi.forward(100)
    bi.left(90)
    bi.forward(400)
    bi.left(90)
    bi.forward(100)
    bi.left(90)
    bi.forward(400)
    bi.end_fill()
    bi.penup()
    bi.left(90)
    bi.forward(100)
    bi.pencolor("mediumblue")
    bi.fillcolor("mediumblue")
    bi.begin_fill()
    bi.pendown()
    bi.forward(100)
    bi.left(90)
    bi.forward(400)
    bi.left(90)
    bi.forward(100)
    bi.left(90)
    bi.forward(400)
    bi.end_fill()
    bi.penup()

def trans_flag() -> None:
    trans.setposition(-200,130)
    trans.hideturtle()
    trans.pencolor("deepskyblue")
    trans.fillcolor("deepskyblue")
    trans.begin_fill()
    trans.pendown()
    trans.forward(400)
    trans.right(90)
    trans.forward(50)
    trans.right(90)
    trans.forward(400)
    trans.right(90)
    trans.forward(50)
    trans.end_fill()
    trans.penup()
    trans.right(180)
    trans.forward(50)
    trans.pencolor("hotpink")
    trans.fillcolor("hotpink")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("white")
    trans.fillcolor("white")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("hotpink")
    trans.fillcolor("hotpink")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()
    trans.left(90)
    trans.forward(50)
    trans.pencolor("deepskyblue")
    trans.fillcolor("deepskyblue")
    trans.begin_fill()
    trans.pendown()
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.left(90)
    trans.forward(50)
    trans.left(90)
    trans.forward(400)
    trans.end_fill()
    trans.penup()

def lesbian_flag() -> None:
    lesbian.setposition(-200,130)
    lesbian.hideturtle()
    lesbian.pencolor("firebrick")
    lesbian.fillcolor("firebrick")
    lesbian.begin_fill()
    lesbian.pendown()
    lesbian.forward(400)
    lesbian.right(90)
    lesbian.forward(50)
    lesbian.right(90)
    lesbian.forward(400)
    lesbian.right(90)
    lesbian.forward(50)
    lesbian.end_fill()
    lesbian.penup()
    lesbian.right(180)
    lesbian.forward(50)
    lesbian.pencolor("tomato")
    lesbian.fillcolor("tomato")
    lesbian.begin_fill()
    lesbian.pendown()
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.left(90)
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.end_fill()
    lesbian.penup()
    lesbian.left(90)
    lesbian.forward(50)
    lesbian.pencolor("snow")
    lesbian.fillcolor("snow")
    lesbian.begin_fill()
    lesbian.pendown()
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.left(90)
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.end_fill()
    lesbian.penup()
    lesbian.left(90)
    lesbian.forward(50)
    lesbian.pencolor("palevioletred")
    lesbian.fillcolor("palevioletred")
    lesbian.begin_fill()
    lesbian.pendown()
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.left(90)
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.end_fill()
    lesbian.penup()
    lesbian.left(90)
    lesbian.forward(50)
    lesbian.pencolor("mediumvioletred")
    lesbian.fillcolor("mediumvioletred")
    lesbian.begin_fill()
    lesbian.pendown()
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.left(90)
    lesbian.forward(50)
    lesbian.left(90)
    lesbian.forward(400)
    lesbian.end_fill()
    lesbian.penup()

def rainbow_flag() -> None:
    rainbow.setposition(-200,130)
    rainbow.hideturtle()
    rainbow.pencolor("red")
    rainbow.fillcolor("red")
    rainbow.begin_fill()
    rainbow.pendown()
    rainbow.forward(400)
    rainbow.right(90)
    rainbow.forward(42)
    rainbow.right(90)
    rainbow.forward(400)
    rainbow.right(90)
    rainbow.forward(42)
    rainbow.end_fill()
    rainbow.penup()
    rainbow.right(180)
    rainbow.forward(42)
    rainbow.pencolor("darkorange")
    rainbow.fillcolor("darkorange")
    rainbow.begin_fill()
    rainbow.pendown()
    rainbow.forward(400)
    rainbow.right(90)
    rainbow.forward(42)
    rainbow.right(90)
    rainbow.forward(400)
    rainbow.right(90)
    rainbow.forward(42)
    rainbow.end_fill()
    rainbow.penup()
    rainbow.right(180)
    rainbow.forward(42)
    rainbow.pencolor("yellow")
    rainbow.fillcolor("yellow")
    rainbow.begin_fill()
    rainbow.pendown()
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.left(90)
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.end_fill()
    rainbow.penup()
    rainbow.left(90)
    rainbow.forward(42)
    rainbow.pencolor("green")
    rainbow.fillcolor("green")
    rainbow.begin_fill()
    rainbow.pendown()
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.left(90)
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.end_fill()
    rainbow.penup()
    rainbow.left(90)
    rainbow.forward(42)
    rainbow.pencolor("blue")
    rainbow.fillcolor("blue")
    rainbow.begin_fill()
    rainbow.pendown()
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.left(90)
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.end_fill()
    rainbow.penup()
    rainbow.left(90)
    rainbow.forward(42)
    rainbow.pencolor("purple")
    rainbow.fillcolor("purple")
    rainbow.begin_fill()
    rainbow.pendown()
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.left(90)
    rainbow.forward(42)
    rainbow.left(90)
    rainbow.forward(400)
    rainbow.end_fill()
    rainbow.penup()

if __name__ == "__main__":
    main()